Basic Block: 

  %1 = alloca i32, align 4
  store i32 5, ptr %1, align 4
  %2 = load i32, ptr %1, align 4
  %3 = add nsw i32 %2, 1
  store i32 %3, ptr %1, align 4
  %4 = load i32, ptr %1, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, ptr %1, align 4
  %6 = load i32, ptr %1, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, ptr %1, align 4
  %8 = load i32, ptr %1, align 4
  %9 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %8)
  ret void


INSTR:                %2 = load i32, ptr %1, align 4
CONSTANT RANGE:     full-set

INSTR:                %3 = add nsw i32 %2, 1
CONSTANT RANGE:     [-2147483647,-2147483648)

INSTR:                %4 = load i32, ptr %1, align 4
CONSTANT RANGE:     full-set

INSTR:                %5 = add nsw i32 %4, 1
CONSTANT RANGE:     [-2147483647,-2147483648)

INSTR:                %6 = load i32, ptr %1, align 4
CONSTANT RANGE:     full-set

INSTR:                %7 = add nsw i32 %6, 1
CONSTANT RANGE:     [-2147483647,-2147483648)

INSTR:                %8 = load i32, ptr %1, align 4
CONSTANT RANGE:     full-set

INSTR:                %9 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %8)
CONSTANT RANGE:     full-set

Basic Block: 

  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 0, ptr %1, align 4
  store i32 5, ptr %2, align 4
  ret i32 0


